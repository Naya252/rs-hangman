{"version":3,"file":"index-SVAmnBnZ.js","sources":["../../src/shared/constants.js","../../src/services/keyboard-service.js","../../src/ui/layouts/quiz-section.js","../../src/ui/layouts/modal.js","../../src/services/quiz-service.js","../../src/shared/helpers.js","../../src/ui/layouts/gallows-section.js","../../main.js"],"sourcesContent":["export const TITLE = 'HANGMAN GAME';\n\nexport const { BASE_URL } = import.meta.env;\n\n// Gallows section\nconst GALLOWS_SECTION_CLASS = 'gallows';\nconst GALLOWS_TITLE_CLASS = `${GALLOWS_SECTION_CLASS}__title`;\nconst IMAGE_CONTAINER_CLASS = `${GALLOWS_SECTION_CLASS}__image-container`;\n\nconst parts = ['gallows', 'head', 'body', 'hand-one', 'hand-two', 'leg-one', 'leg-two', 'crow', 'crow3', 'crow4'];\nconst defauiltParts = [0, 7, 8, 9];\n\nconst images = parts.map((part, i) => ({\n  tag: 'img',\n  class: `${IMAGE_CONTAINER_CLASS}_${part}`,\n  alt: part,\n  src: `${BASE_URL}/img/${part}.svg`,\n  isDefault: defauiltParts.includes(i),\n}));\n\nexport const GALLOWS_SECTON = {\n  section: { tag: 'section', class: GALLOWS_SECTION_CLASS },\n  title: { tag: 'h1', class: GALLOWS_TITLE_CLASS },\n  imgContainer: { tag: 'div', class: IMAGE_CONTAINER_CLASS },\n  images: [...images],\n};\n\n// Quiz section\nconst QUIZ_SECTION_CLASS = 'quiz';\nconst QUIZ_TITLE_CLASS = `${QUIZ_SECTION_CLASS}__title`;\n\nconst QUIZ_WORD_CLASS = `${QUIZ_SECTION_CLASS}__word`;\nconst QUIZ_LETTER_CLASS = `${QUIZ_WORD_CLASS}_letter`;\n\nconst QUIZ_HINT_CLASS = `${QUIZ_SECTION_CLASS}__hint`;\nconst QUIZ_HINT_TEXT_CLASS = `${QUIZ_HINT_CLASS}_text`;\nconst QUIZ_HINT_INFO_CLASS = `${QUIZ_HINT_CLASS}_counter`;\nconst QUIZ_HINT_COUNTER_CLASS = `${QUIZ_HINT_CLASS}_counter-value`;\n\nexport const QUIZ_KEYBOARD_CLASS = `${QUIZ_SECTION_CLASS}__keyboard`;\nexport const QUIZ_KEYBOARD_KEY_CLASS = `${QUIZ_KEYBOARD_CLASS}_key`;\nconst QUIZ_KEYBOARD_OVERLAY_CLASS = `${QUIZ_KEYBOARD_CLASS}_overlay`;\n\nconst KEY_INDEXES = [\n  { first: 0, last: 12 },\n  { first: 12, last: 23 },\n  { first: 23, last: 32 },\n  { first: 32, last: 34 },\n];\nconst lines = [1, 2, 3, 4].map((el) => ({\n  tag: 'div',\n  class: `${QUIZ_KEYBOARD_CLASS}-line${el} line`,\n  index: KEY_INDEXES[el - 1],\n}));\n\nexport const QUIZ_SECTON = {\n  section: { tag: 'section', class: QUIZ_SECTION_CLASS },\n  title: { tag: 'h1', class: QUIZ_TITLE_CLASS },\n\n  word: { tag: 'div', class: QUIZ_WORD_CLASS },\n  letter: { tag: 'div', class: QUIZ_LETTER_CLASS },\n\n  hint: { tag: 'div', class: QUIZ_HINT_CLASS },\n  text: { tag: 'p', class: QUIZ_HINT_TEXT_CLASS },\n  counter: { tag: 'p', class: QUIZ_HINT_INFO_CLASS },\n  counterValue: { tag: 'b', class: QUIZ_HINT_COUNTER_CLASS },\n};\n\nexport const KEYBOARD = {\n  tag: 'div',\n  class: QUIZ_KEYBOARD_CLASS,\n  lines: [...lines],\n  key: { tag: 'button', class: `${QUIZ_KEYBOARD_KEY_CLASS} btn` },\n  overlay: { tag: 'div', class: QUIZ_KEYBOARD_OVERLAY_CLASS },\n};\n\nexport const QUIZ_DATA = [\n  {\n    id: 1,\n    word: { en: 'children', ru: 'детей' },\n    hint: {\n      en: 'Who could be mailed to the US before 1913?',\n      ru: 'Кого можно было отправить по почте в США до 1913 года?',\n    },\n  },\n  {\n    id: 2,\n    word: { en: 'chinese', ru: 'китайский' },\n    hint: {\n      en: 'This language is the most popular in the world',\n      ru: 'Этот язык самый популярный в мире',\n    },\n  },\n  {\n    id: 3,\n    word: { en: 'antarctica', ru: 'антарктида' },\n    hint: {\n      en: 'Where the Onyx River flows 60 days a year?',\n      ru: 'Где течет река Оникс 60 дней в году?',\n    },\n  },\n  {\n    id: 4,\n    word: { en: 'jellyfish', ru: 'медуза' },\n    hint: {\n      en: 'This animal has no brain and no blood vessels',\n      ru: 'У этого животного нет мозга и кровеносных сосудов',\n    },\n  },\n  {\n    id: 5,\n    word: { en: 'cognac', ru: 'коньяк' },\n    hint: {\n      en: 'Thermometers were filled with this liquid until the 17th century',\n      ru: 'Этой жидкостью заполняли термометры до 17 века',\n    },\n  },\n  {\n    id: 6,\n    word: { en: 'lemon', ru: 'лимон' },\n    hint: {\n      en: 'This citrus fruit contains more sugar than strawberries',\n      ru: 'Этот цитрусовый фрукт содержит больше сахара, чем клубника',\n    },\n  },\n  {\n    id: 7,\n    word: { en: 'chicken', ru: 'курица' },\n    hint: {\n      en: 'The longest flight of this bird lasted 13 seconds',\n      ru: 'Самый продолжительный полет этой птицы длился 13 секунд',\n    },\n  },\n  {\n    id: 8,\n    word: { en: 'jupiter', ru: 'юпитер' },\n    hint: {\n      en: 'It regularly rains diamonds on this planet',\n      ru: 'На этой планете регулярно идут дожди из алмазов',\n    },\n  },\n  {\n    id: 9,\n    word: { en: 'diamond', ru: 'алмаз' },\n    hint: {\n      en: 'This gem can burn',\n      ru: 'Этот драгоценный камень может гореть',\n    },\n  },\n  {\n    id: 10,\n    word: { en: 'duck', ru: 'утка' },\n    hint: {\n      en: 'This bird is capable of diving to a depth of 6 meters',\n      ru: 'Эта птица способна нырять на глубину до 6 метров',\n    },\n  },\n];\n\nexport const ALPHABET = [\n  { ru: 'Й', en: 'Q', code: 'KeyQ' },\n  { ru: 'Ц', en: 'W', code: 'KeyW' },\n  { ru: 'У', en: 'E', code: 'KeyE' },\n  { ru: 'К', en: 'R', code: 'KeyR' },\n  { ru: 'Е', en: 'T', code: 'KeyT' },\n  { ru: 'Н', en: 'Y', code: 'KeyY' },\n  { ru: 'Г', en: 'U', code: 'KeyU' },\n  { ru: 'Ш', en: 'I', code: 'KeyI' },\n  { ru: 'Щ', en: 'O', code: 'KeyO' },\n  { ru: 'З', en: 'P', code: 'KeyP' },\n  { ru: 'Х', en: null, code: 'BracketLeft' },\n  { ru: 'Ъ', en: null, code: 'BracketRight' },\n  { ru: 'Ф', en: 'A', code: 'KeyA' },\n  { ru: 'Ы', en: 'S', code: 'KeyS' },\n  { ru: 'В', en: 'D', code: 'KeyD' },\n  { ru: 'А', en: 'F', code: 'KeyF' },\n  { ru: 'П', en: 'G', code: 'KeyG' },\n  { ru: 'Р', en: 'H', code: 'KeyH' },\n  { ru: 'О', en: 'J', code: 'KeyJ' },\n  { ru: 'Л', en: 'K', code: 'KeyK' },\n  { ru: 'Д', en: 'L', code: 'KeyL' },\n  { ru: 'Ж', en: null, code: 'Semicolon' },\n  { ru: 'Э', en: null, code: 'Quote' },\n  { ru: 'Я', en: 'Z', code: 'KeyZ' },\n  { ru: 'Ч', en: 'X', code: 'KeyX' },\n  { ru: 'С', en: 'C', code: 'KeyC' },\n  { ru: 'М', en: 'V', code: 'KeyV' },\n  { ru: 'И', en: 'B', code: 'KeyB' },\n  { ru: 'Т', en: 'N', code: 'KeyN' },\n  { ru: 'Ь', en: 'M', code: 'KeyM' },\n  { ru: 'Б', en: null, code: 'Comma' },\n  { ru: 'Ю', en: null, code: 'Period' },\n  { ru: 'Ё', en: null, code: 'Backquote' },\n  { ru: 'Русский', en: 'English', code: 'Space' },\n];\n\n/**\n * KeyA - a on a US keyboard.\n *        q on an AZERTY (e.g., French) keyboard.\n *\n * KeyQ - q on a US keyboard.\n *        a on an AZERTY (e.g., French) keyboard.\n *\n * KeyW - w on a US keyboard.\n *        z on an AZERTY (e.g., French) keyboard.\n *\n * KeyY - y on a US keyboard.\n *        z on a QWERTZ (e.g., German) keyboard.\n *\n * KeyZ - z on a US keyboard.\n *        w on an AZERTY (e.g., French) keyboard.\n *        y on a QWERTZ (e.g., German) keyboard.\n */\nexport const NON_NORMATIVE_LETTERS = ['KeyA', 'KeyQ', 'KeyW', 'KeyY', 'KeyZ'];\n\nexport const TEXT = [\n  {\n    counterText: {\n      en: 'Incorrect gueses ',\n      ru: 'Неверное предположение ',\n    },\n  },\n  {\n    modal: {\n      answer: {\n        en: 'Answer',\n        ru: 'Ответ',\n      },\n      win: {\n        en: 'Winning!',\n        ru: 'Победа!',\n      },\n      loss: {\n        en: 'Losing...',\n        ru: 'Проигрыш...',\n      },\n      again: {\n        en: 'Play again',\n        ru: 'Сыграть еще',\n      },\n    },\n  },\n];\n","/* eslint-disable import/no-cycle */\n/* eslint-disable no-restricted-syntax */\nimport { QUIZ_KEYBOARD_CLASS, QUIZ_KEYBOARD_KEY_CLASS, ALPHABET, NON_NORMATIVE_LETTERS } from '../shared/constants';\nimport { createElement, removeChildren } from '../shared/helpers';\n\nconst KEY_INDEXES = [\n  { first: 0, last: 12 },\n  { first: 12, last: 23 },\n  { first: 23, last: 32 },\n  { first: 32, last: 34 },\n];\n\nexport default class Keyboard {\n  constructor(className = QUIZ_KEYBOARD_CLASS, lang = 'en', max = null, timeStartClickBtn = null) {\n    this.keyboardTag = 'div';\n    this.keyboardClass = className;\n    this.keyboard = null;\n    this.keyboardLines = null;\n    this.keyboardKey = { tag: 'button', class: QUIZ_KEYBOARD_KEY_CLASS };\n    this.overlay = { tag: 'div', class: `${className}_overlay` };\n    this.lang = lang;\n    this.timeStartClickBtn = timeStartClickBtn;\n    this.max = max;\n    this.alphabet = ALPHABET;\n  }\n\n  initKeyboard(parent) {\n    const newKeyboard = createElement(this.keyboardTag, this.keyboardClass);\n    this.keyboard = newKeyboard;\n\n    this.keyboardLines = [1, 2, 3, 4].map((el) => ({\n      tag: 'div',\n      class: `${this.keyboardClass}-line${el} line`,\n      index: KEY_INDEXES[el - 1],\n    }));\n\n    this.keyboardLines.forEach((el, i) => {\n      const element = createElement(el.tag, el.class, this.keyboard);\n      this.keyboardLines[i].el = element;\n    });\n\n    this.overlay.el = createElement(this.overlay.tag, this.overlay.class, this.keyboard);\n\n    parent.append(this.keyboard);\n  }\n\n  /**\n   * Create keys of keyboard\n   *\n   */\n  createKeys() {\n    let i = 0;\n    while (i < this.keyboardLines.length) {\n      const line = this.keyboardLines[i];\n      removeChildren(line.el.childNodes);\n      const letters = this.alphabet.slice(line.index.first, line.index.last);\n      letters.forEach((letter) => {\n        if (letter[this.lang]) {\n          const key = createElement(this.keyboardKey.tag, this.keyboardKey.class);\n          key.type = 'button';\n          key.innerText = letter[this.lang];\n          key.value = letter[this.lang];\n          key.name = letter.code;\n          key.classList.add('btn');\n          line.el.append(key);\n        }\n      });\n      i += 1;\n    }\n  }\n\n  /**\n   * Check timer between clicks on letters\n   *\n   */\n  checkTimer(event) {\n    let isChangedLanguage;\n    let key;\n\n    if (event.type === 'click' || (event.type === 'keydown' && this.alphabet.some((el) => el.code === event.code))) {\n      if (!this.timeStartClickBtn) {\n        this.timeStartClickBtn = window.performance.now();\n        const data = this.chooseKey(event);\n        isChangedLanguage = data.isChangedLanguage;\n        key = data.key;\n      } else {\n        const timeSecondClick = window.performance.now();\n        if (timeSecondClick - this.timeStartClickBtn > 50) {\n          this.timeStartClickBtn = timeSecondClick;\n          const data = this.chooseKey(event);\n          isChangedLanguage = data.isChangedLanguage;\n          key = data.key;\n        }\n      }\n    }\n\n    if (event.type === 'keyup' && event.code === 'Space') {\n      isChangedLanguage = this.clickOnSpace();\n    }\n\n    return { isChangedLanguage, key };\n  }\n\n  /**\n   * Key up on space of the real keyboard\n   *\n   */\n  clickOnSpace() {\n    const { notDisabled } = this.checkSpaceDisabled();\n    if (notDisabled) {\n      setTimeout(() => {\n        this.createKeys();\n      }, 50);\n    }\n    return notDisabled;\n  }\n\n  checkSpaceDisabled() {\n    const spaceKey = this.keyboard.lastChild.previousSibling.lastChild;\n    const notDisabled = !spaceKey.hasAttribute('disabled');\n    return { notDisabled, spaceKey };\n  }\n\n  /**\n   * Select the letter (key of keyboard)\n   *\n   * @param {Event} event click or keydown\n   *\n   */\n  chooseKey(event) {\n    let key = null;\n    let isChangedLanguage = null;\n\n    if (event.type === 'click') {\n      key = event.target.closest(`.${this.keyboardKey.class}`);\n      if (key) {\n        if (!key.hasAttribute('disabled')) {\n          key.focus();\n        }\n\n        if (key.getAttribute('name') === 'Space') {\n          isChangedLanguage = this.clickOnSpace();\n        }\n      }\n    }\n\n    if (event.type === 'keydown') {\n      let letter;\n      if (NON_NORMATIVE_LETTERS.includes(event.code)) {\n        letter = this.checkSpecialKey(event);\n      } else {\n        letter = this.alphabet.filter((el) => el.code === event.code);\n      }\n\n      if (letter) {\n        key = document.querySelector(`.${this.keyboardKey.class}[value=${letter[0][this.lang]}]`);\n        if (!key.hasAttribute('disabled')) {\n          key.focus();\n        }\n      }\n    }\n\n    return { isChangedLanguage, key };\n  }\n\n  /**\n   * Check non normative letter\n   *\n   * @param {Event} event keydown\n   *\n   */\n  checkSpecialKey(event) {\n    let letter;\n    const key = event.key.toUpperCase();\n\n    if (this.alphabet.some((el) => el.ru === key || el.en === key)) {\n      letter = this.alphabet.filter((el) => el.ru === event.key.toUpperCase() || el.en === event.key.toUpperCase());\n    } else {\n      letter = this.alphabet.filter((el) => el.code === event.code);\n    }\n\n    return letter;\n  }\n\n  /**\n   * Remove disabled from keys of the keyboad\n   *\n   */\n  cleanKeyboard() {\n    const lines = this.keyboard.childNodes;\n    for (const line of lines) {\n      const keys = line.childNodes;\n      for (const key of keys) {\n        key.removeAttribute('disabled');\n      }\n    }\n    this.toggleKeyboardOverly();\n  }\n\n  /**\n   * Toggle overlay of the keyboard\n   *\n   */\n  toggleKeyboardOverly() {\n    this.overlay.el.classList.toggle('show');\n  }\n}\n","/* eslint-disable import/no-cycle */\nimport { QUIZ_SECTON, TITLE, TEXT } from '../../shared/constants';\nimport { createElement, createLetter, removeChildren } from '../../shared/helpers';\nimport quiz from '../../services/quiz-service';\n\n/**\n * Create quiz word\n *\n * @param {Array} word letters of the quiz word\n *\n */\nexport function createWord(word) {\n  removeChildren(QUIZ_SECTON.word.el.childNodes);\n  createLetter(word, QUIZ_SECTON.word.el, QUIZ_SECTON.letter.class, QUIZ_SECTON.letter.tag);\n}\n\n/**\n * Create hint\n *\n * @param {String} text quiz hint\n *\n */\nexport function creteHintContent(text) {\n  removeChildren(QUIZ_SECTON.hint.el.childNodes);\n\n  const p = createElement(QUIZ_SECTON.text.tag, QUIZ_SECTON.text.class, QUIZ_SECTON.hint.el);\n  p.innerText = text;\n  QUIZ_SECTON.text.el = p;\n\n  const infoCounter = createElement(QUIZ_SECTON.counter.tag, QUIZ_SECTON.counter.class, QUIZ_SECTON.hint.el);\n  infoCounter.innerText = TEXT[0].counterText[quiz.lang];\n  QUIZ_SECTON.counter.el = infoCounter;\n\n  const counter = createElement(QUIZ_SECTON.counterValue.tag, QUIZ_SECTON.counterValue.class, QUIZ_SECTON.counter.el);\n  QUIZ_SECTON.counterValue.el = counter;\n}\n\n/**\n * Create section\n *\n * @return {Element} qiuz section\n *\n */\nexport function createQuizSection() {\n  const section = createElement(QUIZ_SECTON.section.tag, QUIZ_SECTON.section.class);\n  QUIZ_SECTON.section.el = section;\n\n  const title = createElement(QUIZ_SECTON.title.tag, QUIZ_SECTON.title.class);\n  title.innerText = TITLE;\n  QUIZ_SECTON.title.el = title;\n\n  const word = createElement(QUIZ_SECTON.word.tag, QUIZ_SECTON.word.class, section);\n  QUIZ_SECTON.word.el = word;\n  const hint = createElement(QUIZ_SECTON.hint.tag, QUIZ_SECTON.hint.class, section);\n  QUIZ_SECTON.hint.el = hint;\n\n  return QUIZ_SECTON.section.el;\n}\n","/* eslint-disable import/no-cycle */\nimport { createElement } from '../../shared/helpers';\nimport quiz from '../../services/quiz-service';\nimport { BASE_URL, TEXT } from '../../shared/constants';\n\n/**\n * Add inert attribute to page (without modal)\n *\n */\nfunction toInert() {\n  document.querySelector('.container').setAttribute('inert', true);\n}\n\n/**\n * Remove inert attribute from page\n *\n */\nfunction fromInert() {\n  document.querySelector('.container').removeAttribute('inert');\n}\n\n/**\n * Remove modal from body\n *\n */\nexport function removeModal() {\n  document.querySelector('body').classList.remove('scroll-not-visible');\n  const content = document.querySelector('.modal__content');\n  content.classList.remove('content--active');\n\n  setTimeout(() => {\n    content.innerHTML = ``;\n    const modal = document.querySelector('.modal');\n    modal.classList.remove('modal--active');\n    fromInert();\n\n    setTimeout(() => {\n      if (document.querySelector('.modal')) {\n        document.querySelector('.modal').remove();\n        // Start new game\n        quiz.submitModal();\n      }\n    }, 100);\n  }, 100);\n}\n\n/**\n * Create modal and add modal to body\n *\n * @param {Boolean} isWinning game result\n *\n */\nexport function createModal(isWinning) {\n  const modal = createElement('div', 'modal');\n  const modalWrap = createElement('div', 'modal__wrap');\n  const modalContent = createElement('div', 'modal__content');\n  const modalTitle = createElement('h3', 'modal__content_title');\n  const modalP = createElement('p', 'modal__content_p');\n  modalP.innerText = `${TEXT[1].modal.answer[quiz.lang]}: ${quiz.word.join('').toUpperCase()}`;\n\n  if (isWinning) {\n    modalTitle.innerText = TEXT[1].modal.win[quiz.lang];\n  } else {\n    modalTitle.innerText = TEXT[1].modal.loss[quiz.lang];\n  }\n  const modalBtn = createElement('button', 'modal__content_btn btn');\n  modalBtn.innerText = TEXT[1].modal.again[quiz.lang];\n\n  modalContent.append(modalTitle);\n  modalContent.append(modalP);\n  modalContent.append(modalBtn);\n  modalWrap.append(modalContent);\n  modal.append(modalWrap);\n\n  const body = document.querySelector('body');\n  body.classList.add('scroll-not-visible');\n  body.append(modal);\n\n  modal.classList.add('modal--active');\n  modalBtn.addEventListener('click', removeModal);\n\n  // Open modal with transition\n  setTimeout(() => {\n    modalContent.classList.add('content--active');\n    // Add crown\n    modalContent.style.backgroundImage = `url(\"${BASE_URL}/img/crow2.svg\")`;\n    modalContent.style.backgroundSize = '20%';\n    modalContent.style.backgroundPosition = '85% 30%';\n    modalContent.style.backgroundRepeat = 'no-repeat';\n    toInert(modal);\n  }, 100);\n}\n","/* eslint-disable import/no-cycle */\nimport { QUIZ_DATA, GALLOWS_SECTON, QUIZ_SECTON } from '../shared/constants';\nimport Keyboard from './keyboard-service';\nimport { creteHintContent, createWord } from '../ui/layouts/quiz-section';\nimport { createFigurePart, cleanGallows } from '../ui/layouts/gallows-section';\nimport { createModal } from '../ui/layouts/modal';\n\nclass Quiz extends Keyboard {\n  constructor(id, word, hint) {\n    super();\n    this.id = id;\n    this.word = word;\n    this.hint = hint;\n    this.counter = 0;\n    this.openedCounter = 0;\n    this.max = 6;\n    this.passedQuizes = [];\n    this.data = [...QUIZ_DATA];\n    this.isWinning = null;\n  }\n\n  /**\n   * Check data from localStorage\n   *\n   */\n  checkLocalStorage() {\n    const lang = localStorage.getItem('lang');\n    if (lang) {\n      this.changeLang(lang);\n    } else {\n      this.changeLang('en');\n    }\n\n    const passed = localStorage.getItem('passed');\n\n    if (passed) {\n      const arr = JSON.parse(passed);\n      if (arr.length) {\n        arr.forEach((el) => {\n          this.changePassedQiuz(+el);\n        });\n      }\n    } else {\n      const lastId = localStorage.getItem('quizId');\n      if (lastId) {\n        this.changePassedQiuz(+lastId);\n      }\n    }\n    // Choose quiz id for start game\n    this.changeId();\n  }\n\n  /**\n   * Save data to localStorage\n   *\n   */\n  saveToLocalStorage() {\n    if (this.passedQuizes.length) {\n      localStorage.setItem('passed', JSON.stringify(this.passedQuizes));\n    }\n    if (this.id) {\n      localStorage.setItem('quizId', this.id);\n    }\n    if (this.lang) {\n      localStorage.setItem('lang', this.lang);\n    }\n  }\n\n  init(parent) {\n    this.initKeyboard(parent);\n    this.checkLocalStorage();\n\n    this.keyboard.addEventListener('click', (event) => this.eventKey(event));\n    document.addEventListener('keydown', (event) => this.eventKey(event));\n    document.addEventListener('keyup', (event) => this.eventKey(event));\n  }\n\n  eventKey(event) {\n    if (\n      (this.counter < this.max && this.isWinning === null) ||\n      (this.openedCounter !== this.word.length && this.isWinning)\n    ) {\n      const { isChangedLanguage, key } = this.checkTimer(event);\n\n      if (isChangedLanguage && this.counter === 0) {\n        setTimeout(() => {\n          this.changeLang();\n          this.changeWord();\n          this.changeHint();\n          this.printCounter();\n        }, 50);\n      }\n      if (key) {\n        setTimeout(() => {\n          this.checkQuizLetter(key, key.getAttribute('value'));\n        }, 50);\n      }\n    }\n  }\n\n  /**\n   * Check key of the quiz keyboard\n   *\n   * @param {Element} key the key of the quiz keyboard\n   * @param {String} value letter (value of key)\n   *\n   */\n  checkQuizLetter(key, value) {\n    if (!key.hasAttribute('disabled')) {\n      if (value !== 'English' && value !== 'Русский') {\n        if (this.word.includes(value.toLowerCase())) {\n          const letters = [];\n          this.word.forEach((el, i) => {\n            if (el === value.toLowerCase()) {\n              letters.push({\n                value,\n                idx: i,\n              });\n            }\n          });\n          // open correct letters of the quiz word\n          this.showLetters(letters);\n        } else {\n          // change the mistakes counter\n          this.changeCounter();\n        }\n        // // add disabled to the selected letter of the quiz keyboard\n        key.setAttribute('disabled', '');\n\n        const { notDisabled, spaceKey } = this.checkSpaceDisabled();\n        if (notDisabled) {\n          spaceKey.setAttribute('disabled', '');\n        }\n      }\n    }\n  }\n\n  /**\n   * Change quiz lang\n   *\n   */\n  changeLang(lang = false) {\n    if ((lang && lang === 'ru') || (!lang && this.lang === 'en')) {\n      this.lang = 'ru';\n      this.createKeys();\n      return;\n    }\n    if ((lang && lang === 'en') || (!lang && this.lang === 'ru')) {\n      this.lang = 'en';\n      this.createKeys();\n    }\n  }\n\n  /**\n   * Add quiz id to array with passed id\n   *\n   * @param {Number} id passed quiz id\n   *\n   */\n  changePassedQiuz(id) {\n    this.passedQuizes.push(id);\n    this.changeData(id);\n    if (this.passedQuizes.length === 10) {\n      this.passedQuizes = [];\n      this.changeData(id);\n      this.changePassedQiuz(id);\n    }\n  }\n\n  /**\n   * Delete passed quiz from data\n   *\n   * @param {Number} id passed quiz id\n   *\n   */\n  changeData(id) {\n    this.data = this.data.filter((el) => el.id !== id);\n    if (this.passedQuizes.length === 10) {\n      this.data = [...QUIZ_DATA];\n    }\n  }\n\n  /**\n   * Choose quiz id for start game\n   *\n   */\n  changeId() {\n    const idx = Math.floor(Math.random() * this.data.length);\n    this.id = this.data[idx].id;\n\n    // Add current quiz to passed quizes\n    this.changePassedQiuz(this.id);\n    // Add data of the new quiz to page\n    this.changeWord();\n    this.changeHint();\n    // add default values to mistake counter\n    this.cleanCounter();\n  }\n\n  /**\n   * Get current item from full list of qiuz data\n   *\n   */\n  getCurrenntQuiz() {\n    const data = QUIZ_DATA.filter((el) => el.id === this.id);\n    return data[0];\n  }\n\n  /**\n   * Change quiz word\n   *\n   */\n  changeWord() {\n    this.word = this.getCurrenntQuiz().word[this.lang].split('');\n    createWord(this.word);\n    console.log(this.word.join(''));\n  }\n\n  /**\n   * Change quiz hint\n   *\n   */\n  changeHint() {\n    this.hint = this.getCurrenntQuiz().hint[this.lang];\n    creteHintContent(this.hint);\n  }\n\n  /**\n   * Change quiz mistake counter\n   *\n   */\n  changeCounter() {\n    if (this.counter < 7) {\n      this.counter += 1;\n      this.printCounter();\n      createFigurePart(GALLOWS_SECTON.images[this.counter], GALLOWS_SECTON.imgContainer.el);\n\n      if (this.counter === 6) {\n        this.isWinning = false;\n        this.overGame(this.isWinning);\n      }\n    }\n  }\n\n  /**\n   * Show correct letters of the quiz word\n   *\n   * @param {Array} letters chosen letter of the keyboard\n   *\n   */\n  showLetters(letters) {\n    letters.forEach((el) => {\n      QUIZ_SECTON.word.el.childNodes[el.idx].innerText = el.value;\n      QUIZ_SECTON.word.el.childNodes[el.idx].classList.add('show');\n    });\n    this.openedCounter += letters.length;\n    if (this.openedCounter === this.word.length) {\n      this.isWinning = true;\n      this.overGame(this.isWinning);\n    }\n  }\n\n  /**\n   * Open modal\n   *\n   * @param {Boolean} isWinning game result\n   *\n   */\n  overGame(isWinning) {\n    // add overlay\n    this.toggleKeyboardOverly();\n    // open modal with pause\n    setTimeout(() => {\n      createModal(isWinning);\n    }, 500);\n  }\n\n  /**\n   * Show mistake counter with new value\n   *\n   */\n  printCounter() {\n    QUIZ_SECTON.counterValue.el.innerText = `${this.counter} / ${this.max}`;\n  }\n\n  /**\n   * Add default values to mistake counter\n   *\n   */\n  cleanCounter() {\n    this.counter = 0;\n    this.openedCounter = 0;\n    this.printCounter();\n  }\n\n  /**\n   * Add default values to quiz\n   *\n   */\n  cleanQuiz() {\n    this.id = 0;\n    this.word = null;\n    this.hint = null;\n    this.isWinning = null;\n  }\n\n  /**\n   * Result of the submit modal for start new game\n   *\n   */\n  submitModal() {\n    // add default values to quiz\n    this.cleanQuiz();\n    // remove body parts\n    cleanGallows();\n    // remove disabled\n    this.cleanKeyboard();\n    // choose new quiz id\n    this.changeId();\n  }\n}\n\nconst quiz = new Quiz();\nexport default quiz;\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable import/no-cycle */\nimport { GALLOWS_SECTON, QUIZ_SECTON, QUIZ_KEYBOARD_KEY_CLASS } from './constants';\nimport quiz from '../services/quiz-service';\n\n/**\n * Create element for DOM\n *\n * @param {String} selector html tag\n * @param {String} className class/es for new element\n * @param {Element} parent parent of the new element\n * @return {Element} created element\n *\n */\nexport function createElement(selector, className, parent) {\n  const element = document.createElement(selector);\n  element.className = className;\n  if (parent) {\n    parent.append(element);\n  }\n  return element;\n}\n\n/**\n * Create letters of the keyboard/qiuz word\n *\n * @param {Array} arr alphabet/quiz word\n * @param {Element} parent DOM element - parent of the letter\n * @param {String} className class name of the letter\n * @param {String} selector html tag of the letter\n *\n */\nexport function createLetter(arr, parent, className, selector) {\n  arr.forEach((el) => {\n    let letter;\n    if (!className.includes(QUIZ_KEYBOARD_KEY_CLASS)) {\n      letter = createElement(selector, className);\n    }\n    if (className.includes(QUIZ_KEYBOARD_KEY_CLASS) && el[quiz.lang]) {\n      letter = createElement(selector, className);\n      letter.type = 'button';\n      if (letter.hasAttribute('type')) {\n        letter.innerText = el[quiz.lang];\n        letter.value = el[quiz.lang];\n        letter.name = el.code;\n      }\n    }\n    if (letter) {\n      parent.append(letter);\n    }\n  });\n}\n\n/**\n * Remove h1\n *\n */\nfunction removeTitle(className) {\n  const title = document.querySelector('h1');\n  let value = false;\n  if (!title || (title && !title.classList.contains(className))) {\n    if (title) {\n      title.remove();\n    }\n    value = true;\n  }\n  return value;\n}\n\n/**\n * Toggle h1\n *\n * @param {Number} curSize current size of the page\n * @param {Number} lastSize page saze before resize\n *\n */\nexport function changeTitle(curSize, lastSize) {\n  if ((curSize >= 781 && !lastSize) || (curSize >= 781 && lastSize <= 780)) {\n    const notTitle = removeTitle(QUIZ_SECTON.title.class);\n    if (notTitle) {\n      QUIZ_SECTON.section.el.prepend(QUIZ_SECTON.title.el);\n    }\n  }\n  if ((curSize < 781 && !lastSize) || (curSize < 781 && lastSize >= 781)) {\n    const notTitle = removeTitle(GALLOWS_SECTON.title.class);\n    if (notTitle) {\n      GALLOWS_SECTON.section.el.prepend(GALLOWS_SECTON.title.el);\n    }\n  }\n}\n\n/**\n * Remove all children of the DOM element\n *\n */\nexport function removeChildren(elements) {\n  let i = elements.length;\n  while (i > 0) {\n    i -= 1;\n    elements[i].remove();\n  }\n}\n","/* eslint-disable import/no-cycle */\nimport { GALLOWS_SECTON, TITLE } from '../../shared/constants';\nimport { createElement } from '../../shared/helpers';\n\n/**\n * Create image (a part of the image container)\n *\n * @param {Object} item item of images\n * @param {Element} parent image container\n *\n */\nexport function createFigurePart(item, parent) {\n  const img = createElement(item.tag, item.class);\n  img.src = item.src;\n  img.alt = item.alt;\n  img.setAttribute('data-is-default', item.isDefault);\n\n  parent.append(img);\n}\n\n/**\n * Create default images\n *\n */\nfunction createDefaultParts() {\n  GALLOWS_SECTON.images.forEach((el) => {\n    if (el.isDefault) {\n      createFigurePart(el, GALLOWS_SECTON.imgContainer.el);\n    }\n  });\n}\n\n/**\n * Remove body parts of the figure\n *\n */\nexport function cleanGallows() {\n  const elements = GALLOWS_SECTON.imgContainer.el.childNodes;\n  let i = elements.length;\n  while (i > 0) {\n    i -= 1;\n    if (elements[i].getAttribute('data-is-default') !== 'true') {\n      elements[i].remove();\n    }\n  }\n}\n\n/**\n * Create section\n *\n * @return {Element} gallows section\n *\n */\nexport function createGallowsSection() {\n  const section = createElement(GALLOWS_SECTON.section.tag, GALLOWS_SECTON.section.class);\n  GALLOWS_SECTON.section.el = section;\n\n  const title = createElement(GALLOWS_SECTON.title.tag, GALLOWS_SECTON.title.class);\n  title.innerText = TITLE;\n  GALLOWS_SECTON.title.el = title;\n\n  const imgContainer = createElement(GALLOWS_SECTON.imgContainer.tag, GALLOWS_SECTON.imgContainer.class, section);\n  GALLOWS_SECTON.imgContainer.el = imgContainer;\n  createDefaultParts();\n\n  return GALLOWS_SECTON.section.el;\n}\n","import './src/sass/style.module.scss';\nimport { createGallowsSection } from './src/ui/layouts/gallows-section';\nimport { createQuizSection } from './src/ui/layouts/quiz-section';\nimport { changeTitle } from './src/shared/helpers';\nimport quiz from './src/services/quiz-service';\nimport { QUIZ_SECTON } from './src/shared/constants';\n\n// Create html\nconst app = document.createElement('div');\napp.className = 'container';\nconst gallowSection = createGallowsSection();\nconst quizSection = createQuizSection();\napp.append(gallowSection);\napp.append(quizSection);\ndocument.querySelector('.body').append(app);\n\n// Change title\nlet size = window.innerWidth;\nchangeTitle(size);\nwindow.addEventListener('resize', (event) => {\n  changeTitle(event.target.innerWidth, size);\n  size = event.target.innerWidth;\n});\n\n// Save passed quizes to LocalStorage\nwindow.addEventListener('beforeunload', (event) => quiz.saveToLocalStorage(event));\n// Refuce context menu\nwindow.addEventListener('contextmenu', (event) => event.preventDefault());\n\nquiz.init(QUIZ_SECTON.section.el);\n"],"names":["define_import_meta_env_default","KEY_INDEXES","Keyboard","className","QUIZ_KEYBOARD_CLASS","lang","max","timeStartClickBtn","QUIZ_KEYBOARD_KEY_CLASS","ALPHABET","parent","newKeyboard","createElement","el","i","element","line","removeChildren","letter","key","event","isChangedLanguage","timeSecondClick","data","notDisabled","spaceKey","NON_NORMATIVE_LETTERS","lines","keys","createWord","word","QUIZ_SECTON","createLetter","creteHintContent","text","p","infoCounter","TEXT","quiz","counter","createQuizSection","section","title","TITLE","hint","toInert","fromInert","removeModal","content","createModal","isWinning","modal","modalWrap","modalContent","modalTitle","modalP","modalBtn","body","BASE_URL","Quiz","id","QUIZ_DATA","passed","arr","lastId","value","letters","idx","createFigurePart","GALLOWS_SECTON","cleanGallows","selector","removeTitle","changeTitle","curSize","lastSize","elements","item","img","createDefaultParts","createGallowsSection","imgContainer","app","gallowSection","quizSection","size"],"mappings":"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"}